// Code generated by protoc-gen-go. DO NOT EDIT.
// source: consumer/proto/event.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/wrappers"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetEventRequest struct {
	EmpID                string   `protobuf:"bytes,1,opt,name=EmpID,proto3" json:"EmpID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventRequest) Reset()         { *m = GetEventRequest{} }
func (m *GetEventRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventRequest) ProtoMessage()    {}
func (*GetEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7cd67c28e2008c7, []int{0}
}

func (m *GetEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventRequest.Unmarshal(m, b)
}
func (m *GetEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventRequest.Marshal(b, m, deterministic)
}
func (m *GetEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventRequest.Merge(m, src)
}
func (m *GetEventRequest) XXX_Size() int {
	return xxx_messageInfo_GetEventRequest.Size(m)
}
func (m *GetEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventRequest proto.InternalMessageInfo

func (m *GetEventRequest) GetEmpID() string {
	if m != nil {
		return m.EmpID
	}
	return ""
}

type Event struct {
	EmpID                string   `protobuf:"bytes,1,opt,name=EmpID,proto3" json:"EmpID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Dept                 string   `protobuf:"bytes,3,opt,name=Dept,proto3" json:"Dept,omitempty"`
	Time                 string   `protobuf:"bytes,4,opt,name=Time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7cd67c28e2008c7, []int{1}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetEmpID() string {
	if m != nil {
		return m.EmpID
	}
	return ""
}

func (m *Event) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Event) GetDept() string {
	if m != nil {
		return m.Dept
	}
	return ""
}

func (m *Event) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

type GetEventResponse struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventResponse) Reset()         { *m = GetEventResponse{} }
func (m *GetEventResponse) String() string { return proto.CompactTextString(m) }
func (*GetEventResponse) ProtoMessage()    {}
func (*GetEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7cd67c28e2008c7, []int{2}
}

func (m *GetEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventResponse.Unmarshal(m, b)
}
func (m *GetEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventResponse.Marshal(b, m, deterministic)
}
func (m *GetEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventResponse.Merge(m, src)
}
func (m *GetEventResponse) XXX_Size() int {
	return xxx_messageInfo_GetEventResponse.Size(m)
}
func (m *GetEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventResponse proto.InternalMessageInfo

func (m *GetEventResponse) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *GetEventResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ListEventRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEventRequest) Reset()         { *m = ListEventRequest{} }
func (m *ListEventRequest) String() string { return proto.CompactTextString(m) }
func (*ListEventRequest) ProtoMessage()    {}
func (*ListEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7cd67c28e2008c7, []int{3}
}

func (m *ListEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEventRequest.Unmarshal(m, b)
}
func (m *ListEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEventRequest.Marshal(b, m, deterministic)
}
func (m *ListEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEventRequest.Merge(m, src)
}
func (m *ListEventRequest) XXX_Size() int {
	return xxx_messageInfo_ListEventRequest.Size(m)
}
func (m *ListEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListEventRequest proto.InternalMessageInfo

type ListEventResponse struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEventResponse) Reset()         { *m = ListEventResponse{} }
func (m *ListEventResponse) String() string { return proto.CompactTextString(m) }
func (*ListEventResponse) ProtoMessage()    {}
func (*ListEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c7cd67c28e2008c7, []int{4}
}

func (m *ListEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEventResponse.Unmarshal(m, b)
}
func (m *ListEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEventResponse.Marshal(b, m, deterministic)
}
func (m *ListEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEventResponse.Merge(m, src)
}
func (m *ListEventResponse) XXX_Size() int {
	return xxx_messageInfo_ListEventResponse.Size(m)
}
func (m *ListEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListEventResponse proto.InternalMessageInfo

func (m *ListEventResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func init() {
	proto.RegisterType((*GetEventRequest)(nil), "consumer.GetEventRequest")
	proto.RegisterType((*Event)(nil), "consumer.Event")
	proto.RegisterType((*GetEventResponse)(nil), "consumer.GetEventResponse")
	proto.RegisterType((*ListEventRequest)(nil), "consumer.ListEventRequest")
	proto.RegisterType((*ListEventResponse)(nil), "consumer.ListEventResponse")
}

func init() { proto.RegisterFile("consumer/proto/event.proto", fileDescriptor_c7cd67c28e2008c7) }

var fileDescriptor_c7cd67c28e2008c7 = []byte{
	// 364 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0xc7, 0x49, 0xbf, 0x68, 0xd7, 0x43, 0xdb, 0xc5, 0x8f, 0x18, 0xad, 0x96, 0x40, 0xa9, 0xa7,
	0x04, 0xaa, 0x78, 0xf2, 0x24, 0x2d, 0x45, 0x10, 0xc1, 0xea, 0x45, 0x6f, 0x9b, 0x30, 0xa6, 0x41,
	0xb3, 0xbb, 0x66, 0x37, 0xf5, 0x20, 0x5e, 0x7c, 0x05, 0x1f, 0xcd, 0x37, 0x10, 0x1f, 0x44, 0xb2,
	0xbb, 0xb1, 0x1f, 0xe4, 0x94, 0x99, 0xff, 0x6f, 0x32, 0xff, 0x99, 0x49, 0x90, 0x13, 0x32, 0x2a,
	0xb2, 0x04, 0x52, 0x9f, 0xa7, 0x4c, 0x32, 0x1f, 0x16, 0x40, 0xa5, 0xa7, 0x62, 0xdc, 0x2c, 0x98,
	0x73, 0x18, 0x31, 0x16, 0xbd, 0x80, 0x4f, 0x78, 0xec, 0x13, 0x4a, 0x99, 0x24, 0x32, 0x66, 0x54,
	0xe8, 0x3a, 0xe7, 0xc8, 0x50, 0x95, 0x05, 0xd9, 0x93, 0xff, 0x96, 0x12, 0xce, 0x21, 0x35, 0xdc,
	0x1d, 0xa2, 0xf6, 0x14, 0xe4, 0x24, 0xef, 0x3c, 0x83, 0xd7, 0x0c, 0x84, 0xc4, 0xdb, 0xa8, 0x3e,
	0x49, 0xf8, 0xd5, 0xd8, 0xb6, 0xfa, 0xd6, 0x49, 0x6b, 0xa6, 0x13, 0xf7, 0x01, 0xd5, 0x55, 0x55,
	0x39, 0xc6, 0x18, 0xd5, 0x6e, 0x48, 0x02, 0x76, 0x45, 0x89, 0x2a, 0xce, 0xb5, 0x31, 0x70, 0x69,
	0x57, 0xb5, 0x96, 0xc7, 0xb9, 0x76, 0x1f, 0x27, 0x60, 0xd7, 0xb4, 0x96, 0xc7, 0xee, 0x2d, 0xea,
	0x2c, 0x67, 0x10, 0x9c, 0x51, 0x01, 0x78, 0x80, 0xea, 0x6a, 0x5d, 0xe5, 0xb2, 0x35, 0x6a, 0x7b,
	0xc5, 0xbe, 0x9e, 0xae, 0xd3, 0x14, 0xef, 0xa2, 0x86, 0x90, 0x44, 0x66, 0xc2, 0x18, 0x9b, 0xcc,
	0xc5, 0xa8, 0x73, 0x1d, 0x8b, 0xb5, 0xbd, 0xdc, 0x0b, 0xd4, 0x5d, 0xd1, 0x8c, 0xcf, 0x10, 0x35,
	0x54, 0x27, 0x61, 0x5b, 0xfd, 0x6a, 0x99, 0x91, 0xc1, 0xa3, 0x1f, 0x0b, 0x75, 0x95, 0x32, 0x05,
	0x0a, 0x29, 0x91, 0x2c, 0xbd, 0x5b, 0x84, 0x78, 0x8e, 0x9a, 0xc5, 0xe8, 0x78, 0x7f, 0xf9, 0xea,
	0xc6, 0x49, 0x1d, 0xa7, 0x0c, 0xe9, 0x09, 0xdc, 0xc1, 0xe7, 0xf7, 0xef, 0x57, 0xe5, 0x18, 0xf7,
	0xf4, 0xf7, 0x8d, 0x8a, 0xf6, 0x3a, 0xf5, 0xdf, 0xd5, 0x7d, 0x3f, 0x70, 0x88, 0x5a, 0xff, 0xd3,
	0xe3, 0x95, 0x7e, 0x9b, 0x6b, 0x3a, 0x07, 0xa5, 0xcc, 0x98, 0xf5, 0x94, 0xd9, 0x1e, 0xde, 0x29,
	0x35, 0xbb, 0x3c, 0x7f, 0x3c, 0x8b, 0x62, 0x39, 0xcf, 0x02, 0x2f, 0x64, 0x89, 0xcf, 0x53, 0xb2,
	0x00, 0xa0, 0xc1, 0x33, 0x84, 0x9b, 0xe5, 0xeb, 0x7f, 0x66, 0xd0, 0x50, 0x8f, 0xd3, 0xbf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x73, 0xf3, 0x87, 0xcc, 0xb2, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EventGeneratorSvcClient is the client API for EventGeneratorSvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventGeneratorSvcClient interface {
	GetEvent(ctx context.Context, in *GetEventRequest, opts ...grpc.CallOption) (*GetEventResponse, error)
	ListEvent(ctx context.Context, in *ListEventRequest, opts ...grpc.CallOption) (*ListEventResponse, error)
}

type eventGeneratorSvcClient struct {
	cc grpc.ClientConnInterface
}

func NewEventGeneratorSvcClient(cc grpc.ClientConnInterface) EventGeneratorSvcClient {
	return &eventGeneratorSvcClient{cc}
}

func (c *eventGeneratorSvcClient) GetEvent(ctx context.Context, in *GetEventRequest, opts ...grpc.CallOption) (*GetEventResponse, error) {
	out := new(GetEventResponse)
	err := c.cc.Invoke(ctx, "/consumer.EventGeneratorSvc/GetEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventGeneratorSvcClient) ListEvent(ctx context.Context, in *ListEventRequest, opts ...grpc.CallOption) (*ListEventResponse, error) {
	out := new(ListEventResponse)
	err := c.cc.Invoke(ctx, "/consumer.EventGeneratorSvc/ListEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventGeneratorSvcServer is the server API for EventGeneratorSvc service.
type EventGeneratorSvcServer interface {
	GetEvent(context.Context, *GetEventRequest) (*GetEventResponse, error)
	ListEvent(context.Context, *ListEventRequest) (*ListEventResponse, error)
}

// UnimplementedEventGeneratorSvcServer can be embedded to have forward compatible implementations.
type UnimplementedEventGeneratorSvcServer struct {
}

func (*UnimplementedEventGeneratorSvcServer) GetEvent(ctx context.Context, req *GetEventRequest) (*GetEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvent not implemented")
}
func (*UnimplementedEventGeneratorSvcServer) ListEvent(ctx context.Context, req *ListEventRequest) (*ListEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListEvent not implemented")
}

func RegisterEventGeneratorSvcServer(s *grpc.Server, srv EventGeneratorSvcServer) {
	s.RegisterService(&_EventGeneratorSvc_serviceDesc, srv)
}

func _EventGeneratorSvc_GetEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventGeneratorSvcServer).GetEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumer.EventGeneratorSvc/GetEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventGeneratorSvcServer).GetEvent(ctx, req.(*GetEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventGeneratorSvc_ListEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventGeneratorSvcServer).ListEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/consumer.EventGeneratorSvc/ListEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventGeneratorSvcServer).ListEvent(ctx, req.(*ListEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventGeneratorSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "consumer.EventGeneratorSvc",
	HandlerType: (*EventGeneratorSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEvent",
			Handler:    _EventGeneratorSvc_GetEvent_Handler,
		},
		{
			MethodName: "ListEvent",
			Handler:    _EventGeneratorSvc_ListEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "consumer/proto/event.proto",
}
